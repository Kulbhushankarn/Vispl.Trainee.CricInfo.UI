@model IEnumerable<Vispl.Trainee.CricInfo.VO.Cls_TeamPlayer_VO>

@{
    ViewBag.Title = "DisplayTeamDetailsInGrid";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Team List</h2>

@(Html.EJS().Grid<Vispl.Trainee.CricInfo.VO.Cls_TeamPlayer_VO>("GridOverview")
        .DataSource(Model)
        .AllowPaging()
        .AllowFiltering()
        .Columns(col =>
        {
            col.Field("TeamName").HeaderText("Team Name").Width("100").Add();
            col.Field("TeamShortName").HeaderText("Team Short Name").Width("100").Add();
            col.Template("<div class='team-players'></div>").HeaderText("Team Players").Width("200").Add();
            col.Field("TeamCaptain").HeaderText("Team Captain").Width("100").Add();
            col.Field("TeamWicketKeeper").HeaderText("Team Wicket Keeper").Width("150").Add();
            col.Field("TeamViceCaptain").HeaderText("Team Vice Captain").Width("150").Add();
        })
        .QueryCellInfo("queryCellInfo")
        .Render()
)

<script>
    function queryCellInfo(args) {
        // Check if the cell belongs to the "Team Players" column
        if (args.column.headerText === "Team Players") {
            const players = args.data.TeamPlayer;
            const container = args.cell.querySelector('.team-players');
            if (container && Array.isArray(players)) {
                container.innerHTML = ''; // Clear any existing content
                players.forEach(player => {
                    const playerElement = document.createElement('span');
                    playerElement.innerText = player;
                    container.appendChild(playerElement);
                    container.appendChild(document.createElement('br'));
                });
            }
        }
    }
</script>
